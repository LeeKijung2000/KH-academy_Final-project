<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="itView.springboot.mapper.ProductMapper">
	
	<insert id="insertProduct">
		<selectKey order="BEFORE" keyProperty="productNo" resultType="_int">
			select seq_product.nextval from dual 
		</selectKey>
		insert into product
		values(#{productNo}, #{productName}, #{productDetail}, #{productStock}, #{productPrice}, #{productCategory}, #{productCompany}, default, #{userNo}, #{skinType}, #{personalColor}, #{skinTrouble}, #{headSkin}, #{userAge}, #{gender}, #{ingredient}, #{ecoFriendly})
	</insert>
	
	<insert id="insertAttm">
		insert into attachment
		values(seq_attm.nextval, #{attmName}, #{attmRename}, #{attmPath}, default, sysdate, 0, 0, #{positionNo})
	</insert>
	
	<select id="selectMyProduct" resultType="Product">
		select *
		from product
		where user_no = #{userNo}
		<if test="productNo != 0">
			and product_no = #{productNo}
		</if>
		order by product_no desc
	</select>
	
	<update id="editStock">
		update product
		set product_stock = #{productStock}
		where product_no = #{productNo} and user_no = #{userNo}
	</update>
	
	<insert id="insertCoupon">
		insert into coupon
		values(seq_coupon.nextval, #{couponName}, #{couponDescription}, 'all', #{couponDiscount}, sysdate, sysdate, sysdate, #{couponMinprice}, #{userNo}, default)
	</insert>
	
	<select id="selectMyCoupon" resultType="Coupon">
		select *
		from coupon
		where user_no = #{userNo}
		order by coupon_no desc
	</select>
	
	<update id="editCoupon">
		update coupon
		set coupon_discount = #{couponDiscount}, coupon_status = #{couponStatus}
		where coupon_no = #{couponNo}
	</update>
	
	<select id="selectMyAttm" resultType="Attachment">
		select *
		from attachment
		where attm_level = 0 and attm_position = 0 and position_no = #{productNo}
	</select>
	
	<update id="editProduct">
		update product
		set product_name = #{productName}, product_detail = #{productDetail}, product_stock = #{productStock}, product_price = #{productPrice}
		where product_no = #{productNo}
	</update>
	
	<delete id="deleteMyAttm">
		delete 
		from attachment
		where attm_no = #{attmNo}
	</delete>
	
	<delete id="deleteProduct">
		delete
		from product
		where product_no = #{productNo}
	</delete>
	
	<delete id="deleteAttm">
		delete
		from attachment
		where position_no = #{productNo}
	</delete>
	
	<select id="selectReview">
		select *
		from review
			 join "USER" using(user_no)
			 left join review_answer using(review_no)
		where product_no = #{productNo}
		order by review_no desc
	</select>

	<select id="getLatestProducts" resultType="Product">
		SELECT p.PRODUCT_NO,
		p.PRODUCT_NAME,
		p.PRODUCT_DETAIL,
		p.PRODUCT_PRICE,
		a.ATTM_RENAME AS attmRename
		FROM PRODUCT p
		LEFT JOIN ATTACHMENT a
		ON p.PRODUCT_NO = a.POSITION_NO
		AND a.ATTM_LEVEL = 0
		AND a.ATTM_POSITION = 0
		ORDER BY p.PRODUCT_NO DESC
		FETCH FIRST 10 ROWS ONLY
	</select>

	<select id="getSearchProducts" resultType="Product" parameterType="String">
		SELECT
		p.PRODUCT_NO,
		p.PRODUCT_NAME,
		p.PRODUCT_DETAIL,
		p.PRODUCT_PRICE,
		p.PRODUCT_COMPANY,
		a.ATTM_RENAME AS attmRename
		FROM PRODUCT p
		LEFT JOIN ATTACHMENT a
		ON p.PRODUCT_NO = a.POSITION_NO
		AND a.ATTM_LEVEL = 0
		AND a.ATTM_POSITION = 0
		WHERE 1=1
		<if test="q != null and q != ''">
			AND (p.PRODUCT_NAME LIKE '%' || #{q} || '%'
			OR p.PRODUCT_DETAIL LIKE '%' || #{q} || '%'
			OR p.PRODUCT_COMPANY LIKE '%' || #{q} || '%')
		</if>
		ORDER BY p.PRODUCT_NO DESC
	</select>

	<select id="getFilterProducts" resultType="Product" parameterType="map">
		SELECT
		p.PRODUCT_NO,
		p.PRODUCT_NAME,
		p.PRODUCT_DETAIL,
		p.PRODUCT_PRICE,
		p.PRODUCT_CATEGORY,
		p.PRODUCT_COMPANY,
		a.ATTM_RENAME AS attmRename
		FROM PRODUCT p
		LEFT JOIN ATTACHMENT a
		ON p.PRODUCT_NO = a.POSITION_NO
		AND a.ATTM_LEVEL = 0
		AND a.ATTM_POSITION = 0
		WHERE 1=1
		<if test="q != null and q != ''">
			AND (p.PRODUCT_NAME LIKE '%' || #{q} || '%'
			OR p.PRODUCT_DETAIL LIKE '%' || #{q} || '%'
			OR p.PRODUCT_COMPANY LIKE '%' || #{q} || '%')
		</if>
		<if test="categories != null and categories.size() > 0">
			AND p.PRODUCT_CATEGORY IN
			<foreach item="cat" collection="categories" open="(" separator="," close=")">
				#{cat}
			</foreach>
		</if>
		ORDER BY p.PRODUCT_NO DESC
	</select>

	<select id="getListCountWithFilter" resultType="int" parameterType="map">
		SELECT COUNT(*)
		FROM PRODUCT p
		WHERE 1=1
		<if test="q != null and q != ''">
			AND (p.PRODUCT_NAME LIKE '%' || #{q} || '%'
			OR p.PRODUCT_DETAIL LIKE '%' || #{q} || '%'
			OR p.PRODUCT_COMPANY LIKE '%' || #{q} || '%')
		</if>
		<if test="categories != null and categories.size() > 0">
			AND p.PRODUCT_CATEGORY IN
			<foreach item="cat" collection="categories" open="(" separator="," close=")">
				#{cat}
			</foreach>
		</if>
	</select>


	<select id="getListCountWithSearch" resultType="int" parameterType="String">
		SELECT COUNT(*)
		FROM PRODUCT p
		WHERE 1=1
		<if test="q != null and q != ''">
			AND (p.PRODUCT_NAME LIKE '%' || #{q} || '%'
			OR p.PRODUCT_DETAIL LIKE '%' || #{q} || '%'
			OR p.PRODUCT_COMPANY LIKE '%' || #{q} || '%')
		</if>
	</select>

	<select id="selectMyProductDetail">
		select *
		from product
			 join "USER" using(user_no)
		where user_no = #{userNo} and product_no = #{productNo}
	</select>

	<select id="selectReviewCount">
		select count(*)
		from review
		where product_no = #{product_no}
	</select>
	
	<insert id="writeExp">
		insert into experience_group
		values(seq_exp_group, #{expTitle}, #{expContent}, sysdate, #{expEnd}, default, #{userNo})
	</insert>
	
	<select id="selectProductDetail">
		select *
		from product
			 join "USER" using(user_no)
		where product_no = #{productNo}
	</select>
	
	<select id="selectQuestion">
		select *
		from question
			 join "USER" using(user_no)
			 join product using(product_no)
		where product_no = #{productNo}
	</select>
	
	<select id="selectAnswer" resultType="Answer">
		select *
		from answer
			 left join question using(question_no)
			 left join product using(product_no)
		where question_no = #{questionNo}
	</select>
	
	<select id="selectAnswerDetail">
		select *
		from answer
		where question_no = #{questionNo}
	</select>
	
	<select id="selectQuestionDetail">
		select *
		from question
		where question_no = #{questionNo}
	</select>
	
	<insert id="insertAnswer">
		insert into answer
		values(seq_answer.nextVal, #{answerContent}, default, #{questionNo})
	</insert>
	
	<select id="selectBeforeAnswerCount">
		select count(*)
		from question
		where question_status = 'N'
	</select>
	
	<select id="selectAfterAnswerCount">
		select count(*)
		from question
		where question_status = 'Y'
	</select>
	
	<delete id="deleteAnswer">
		delete
		from answer
		where answer_no = #{answerNo}
	</delete>
	
	<update id="editAnswer">
		update answer
		set answer_content = #{answerContent}
		where answer_no = #{answerNo}
	</update>
	
	<select id="countReview">
		select p.product_no, p.product_name, p.product_stock, NVL(r.review_count, 0) AS review_count
		from product p
			 left join (
			 			select product_no, count(*) AS review_count
			 			from review
			 			group by product_no) r on p.product_no = r.product_no
		where p.user_no = #{userNo}
		order by p.product_no
	</select>
	
	<select id="selectExpGroup">
		select *
		from experience_group
		where user_no = #{userNo}
	</select>
	
	<select id="selectExpApp">
		select user_name, apply_content, exp_title, apply_no
		from experience_application
		     join experience_group on (exp_no = exp_group_no)
		where experience_application.exp_group_no = #{expNo} and is_choice = 'N'
	</select>
	
	<select id="selectMyOrderList">
		select *
		from "ORDER"
			  join product on (order_target_no = product_no)
		where product.user_no = #{userNo}
	</select>
	
	<select id="countReviewAnswer">
		select count(*)
		from review_answer
			 join review using(review_no)
			 join product using(product_no)
		where product.user_no = #{userNo}
	</select>
	
	<insert id="insertReviewAnswer">
		insert into review_answer
		values(seq_review_answer.nextval, #{reviewAnswerContent}, default, #{reviewNo})
	</insert>
	
	<select id="selectReviewAnswer">
		select *
		from review_answer
			 join review using(review_no)
		where product_no = #{productNo}
	</select>
	
	<delete id="deleteReviewAnswer">
		delete
		from review_answer
		where review_answer_id = #{reviewAnswerId}
	</delete>	
	
	<update id="updateExpApply">
		update experience_application
		set is_choice = 'Y'
		where apply_no = #{applyNo} and is_choice = 'N'
	</update>
	
	<update id="rejectExpApply">
		update experience_application
		set is_choice = 'R'
		where apply_no = #{applyNo} and is_choice = 'N'
	</update>
	
	<insert id="downCoupon">
		insert into coupon_box
		values(seq_coupon_box.nextval, default, #{userNo}, #{couponNo})
	</insert>
</mapper>
