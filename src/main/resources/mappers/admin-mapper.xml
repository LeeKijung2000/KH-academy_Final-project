<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper
        PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "https://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="itView.springboot.mapper.AdminMapper">
<!-- 회원 전체 조회-->
<select id="getUserListCount" resultType="int">
select count(*) 
    from (
        select u.user_no, u.user_id, u.email, u.user_type, u.brand_name, u.user_status,
               count(r.report_no) as reportCount
        from "USER" u
        left join REPORT r on u.user_no = r.reporter_user_id
        group by u.user_no, u.user_id, u.email, u.user_type, u.brand_name, u.user_status)t
	<if test="value != null and value != ''">
		<choose>
			<when test="condition == 'userId'">
				where user_id like '%' || #{value} || '%'
			</when>
			<when test="condition == 'userType'">
				where user_type like '%'|| #{value} ||'%'
			</when>
			<when test="condition == 'userStatus'">
				where user_status like '%' || #{value} || '%'
			</when>
			<when test="condition == 'reportCount'">
				where reportCount = #{value}
			</when>
			<otherwise>
            	where (user_id like '%' || #{value} || '%')
            </otherwise>
		</choose>
	</if>
</select>

<select id="selectUserList" resultType="itView.springboot.dto.UserReport">
	select * 
    from (
        select 
        	u.user_no, u.user_id, u.email, u.user_type, 
        	u.brand_name, u.user_status,
               count(r.report_no) as reportCount
        from "USER" u
        left join REPORT r 
        	on u.user_no = r.reporter_user_id
        	and r.report_type = 'U'
        group by 
        	u.user_no, u.user_id, u.email, u.user_type, u.brand_name, u.user_status)t
	<if test="value != null and value != ''">
		<choose>
			<when test="condition == 'userId'">
				where upper(user_id) like '%' || upper(#{value}) || '%'
			</when>
			<when test="condition == 'userType'">
				where upper(user_type) like '%'|| upper(#{value})||'%'
			</when>
			<when test="condition == 'userStatus'">
				where upper(user_status) like '%' || upper(#{value}) || '%'
			</when>
			<when test="condition == 'reportCount'">
				where reportCount = #{value}
			</when>
			<otherwise>
            	where (upper(user_id) like '%' || upper(#{value}) || '%')
            </otherwise>
		</choose>
	</if>
</select>

<select id="selectUser" parameterType="int" resultType="itView.springboot.dto.UserReport">
SELECT 
    u.user_no,
    u.user_id,
    u.email,
    u.user_type,
    u.brand_name,
    u.user_status,
    COUNT(r.report_no) AS reportCount
FROM "USER" u
LEFT JOIN REPORT r 
    ON u.user_no = r.reporter_user_id
    AND r.report_type = 'U'
WHERE u.user_no = #{userNo}
GROUP BY 
    u.user_no, u.user_id, u.email, u.user_type, u.brand_name, u.user_status
</select>


<!-- 신고게시판 조회 -->
<select id="getReportListCount1" resultType="int">
select count(*) 
    from (
    	select report_target_no
    	from report r
    	where report_type ='U'
		GROUP BY report_target_no
		) t
   
</select>
<select id="getReportListCount2" resultType="int">
select count(*) 
    from (
    	select report_target_no
    	from report r
    	where report_type ='B'
	GROUP BY report_target_no
		) t
   
</select>

<select id="getReportListCount3" resultType="int">
select count(*) 
    from (
    	select report_target_no
    	from report r
    	where report_type = 'R'
	GROUP BY report_target_no
	) t
</select>

<select id="getReportListCount4" resultType="int">
select count(*) 
    from (
    	select report_target_no
    	from report r
    	where report_type = 'V'
    	 GROUP BY report_target_no
		) t
</select>

<select id="selectReportUserList">
	 SELECT 
        ROW_NUMBER() OVER (ORDER BY COUNT(r.report_no) DESC) AS row_num,
        r.report_type,
        r.report_status,
        r.report_date,
        r.report_title,
        u.user_type,
        u.user_status,
        u.user_no,
        u.user_name,
        COUNT(r.report_no) AS report_count
    FROM "USER" u
    JOIN report r
      ON r.report_target_no = u.user_no
    WHERE r.report_type = 'U'
    GROUP BY u.user_no, u.user_name,r.report_date,r.report_status, r.report_type, u.user_type, u.user_status,r.report_title
    ORDER BY report_count DESC
</select>
<select id="selectReportBoardList" >
	SELECT 
	    ROW_NUMBER() OVER (ORDER BY COUNT(report_no) DESC) AS row_num,
	    r.report_type,
	    r.report_date,
	    r.report_title,
	    r.report_status,
	    b.board_id,
	    b.board_title,
	    u.user_name,
	    COUNT(r.report_no) AS report_count
		FROM board b
		JOIN report r 
		  ON r.report_target_no = b.board_id
		JOIN "USER" u
		  ON b.user_no = u.user_no
		WHERE report_type = 'B'
		GROUP BY  
			b.board_id, b.board_title, 
			r.report_type, r.report_date,
			r.report_title,r.report_status,
			u.user_name
		ORDER BY report_count DESC
</select>
	
<select id="selectReportReviewList" >
	SELECT 
	    ROW_NUMBER() OVER (ORDER BY COUNT(report_no) DESC) AS row_num,
	    r.report_title,
	    r.report_date,
	    r.report_status,
	    u.user_name,
	    COUNT(r.report_no) AS report_count
		FROM review e
		JOIN report r
		  ON r.report_target_no = e.review_no
		JOIN "USER" u
		  ON u.user_no = r.reporter_user_id 
		WHERE report_type = 'R'
		GROUP BY r.report_title, r.report_date,
				r.report_status, u.user_name
		ORDER BY report_count DESC
</select>

<select id="selectReportReplyList">
	SELECT 
	    ROW_NUMBER() OVER (ORDER BY COUNT(report_no) DESC) AS row_num,
	    r.report_title,
	    r.report_date,
	    r.report_status,
	    u.user_id,
	    COUNT(report_no) AS report_count
		FROM reply v
		JOIN report r
		  ON r.report_target_no = v.reply_no
		JOIN "USER" u
		  ON u.user_no = r.reporter_user_id 
		WHERE report_type = 'V'
		GROUP BY 
			 r.report_title,
			 r.report_date,
			 r.report_status,
	         u.user_id
		ORDER BY report_count DESC
</select>


<!-- 신고 상세조회 + 히스토리 -->
<select id="selectReportUser">
	select 
		u.user_name,
		u.user_type,
		u.user_no,
		u.user_status,
		count(r.report_no) as report_count,
		max(r.report_date) as report_date
	from "USER" u 
	join report r on (reporter_user_id = user_no)
	where user_no = #{userNo}
	group by u.user_name, u.user_type, u.user_no,u.user_status
</select>
<select id="getReportCount">
	select count(*) from report 
	where report_type = 'U' and report_target_no = #{userNo}
</select>
<select id="getUserReportList">
	select * 
	from report
	join "USER" on (user_no = reporter_user_id)
	where report_target_no = #{userNo}
	order by report_date desc
</select>


<select id="selectReportBoard" parameterType="int" resultType="Board">
	SELECT 
	    r.report_status,
	    r.report_title,
	    r.report_no,
	    b.board_id,
	    b.board_title,
	    b.board_content,
	    u.user_id,
	    COUNT(r.report_no) AS report_count
	    max(r.report_date) as report_date
		FROM board b
		JOIN report r 
		  ON r.report_target_no = b.board_id
		JOIN "USER" u
		  ON b.user_no = u.user_no
		WHERE report_type = 'B' and r.report_no = #{reportNo}
		 group by b.board_id, b.board_title, b.board_content
</select>
<select id="getBoardReportCount">
	select count(*) from report 
	where report_type = 'B' and report_target_no = #{boardId}
</select>
<select id="getBoardReportList">
	select * 
	from report
	join board on (user_no = reporter_user_id)
	where report_target_no = #{boardId}
	order by report_date desc
</select>


<select id="selectReportReview" parameterType="int" resultType="Review">
SELECT 
	    r.report_no, 
	    r.report_status,
	    r.report_title,
	    u.user_name,
	    e.review_date,
	    e.review_no,
	    e.review_content,
	    COUNT(r.report_no) AS report_count,
	    max(r.report_date) as report_date
		FROM review e
		JOIN report r 
		  ON r.report_target_no = e.review_no
		JOIN "USER" u 
		  ON e.user_no = u.user_no
		WHERE report_type = 'R' and r.report_no = #{reportNo}
		GROUP BY 
			r.report_no,
		    r.report_status,
		    r.report_title,
		    u.user_name,
		    e.review_date,
		    e.review_no,
		    e.review_content
</select>

<select id="getReviewReportCount">
select count(*) from report 
where report_type = 'R' and report_target_no = #{reviewNo}

</select>
<select id="getReviewReportList">
select * 
	from report
	join review on (user_no = reporter_user_id)
	where report_target_no = #{reviewNo}
	order by report_date desc
</select>


<select id="selectReportReply" parameterType="Integer" resultType="Reply">
SELECT 
	    r.report_no, 
	    r.report_title,
	    v.reply_no,
	    v.reply_date,
	    v.reply_status,
	    v.reply_content,
	    u.user_Id,
	    u.user_name,
	    COUNT(r.report_no) AS report_count,
	    max(r.report_date) as report_date
		FROM reply v
		JOIN report r 
		  ON r.report_target_no = v.reply_no
		JOIN "USER" u
		  ON v.user_no = u.user_no
		WHERE report_type = 'R' and r.report_no = #{reportNo}
		GROUP BY
		    r.report_no, 
		    r.report_title,
		    v.reply_no,
		    v.reply_date,
		    v.reply_status,
		    v.reply_content,
		    u.user_Id,
		    u.user_name
</select>
<select id="getReplyReportCount">
select count(*) from report 
where report_type = 'V' and report_target_no = #{replyNo}
</select>
<select id="getReplyReportList">
select * 
	from report r
	join "USER" u on (u.user_no = r.reporter_user_id)
	where report_target_no = #{replyNo}
	order by report_date desc
</select>











<!-- 일반 문의 게시판 조회 -->
<select id="gBoardListCount" parameterType="int" resultType="java.lang.Integer">
	select count(*) from board where board_type = '3' and board_status = 'Y'
</select>
<select id="selectBoardList" resultType="Board">
	select 
		b.board_id,
		b.board_title,
		b.board_content,
		b.board_date,
		b.board_modified_date,
		b.board_type,
		b.board_status,
		b.user_no,
		b.board_reply_status,
		u.user_id
	from board b
	join
		"USER" u 
		 on b.user_no = u.user_no
	where board_type='3' and board_status ='Y'
</select>

<select id="gBoardDetail" parameterType="int" resultType="itView.springboot.dto.GboardDetail">
select 
		b.board_id,
		b.board_title,
		b.board_content,
		b.board_date,
		b.board_modified_date,
		b.board_type,
		b.board_status,
		b.user_no,
		b.board_reply_status,
		u.user_id
from board b
join "USER" u 
 	  on b.user_no = u.user_no
where board_id = #{boardId} and board_status='Y' and board_type='3'
order by board_date desc, board_id DESC
</select>

<!-- 일반문의게시판 답변등록 -->
<insert id="saveGreply">
	insert into admin_reply
	values (ㅡ
		seq_admin_reply.nextval,
		#{replyContent},
		sysdate,
		sysdate,
		'Y',
		#{boardId},
		'3',
		#{userNo}
		)
</insert>

<!-- 일반문의 댓글조회-->
<select id="getGeneralReplyList" parameterType="int" resultType="AdminReply">
	select * from admin_reply 
	where board_type='3' 
		and reply_status ='Y' 
		and board_id = #{boardId}
	order by reply_date desc
</select>


<!-- 판매자 문의게시판 조회하기 -->
<select id="pBoardListCount" parameterType="int" resultType="java.lang.Integer">
	select count(*) from board where board_type = '3' and board_status = 'Y'
</select>
<select id="selectpBoardList" resultType="Board">
	select 
		b.board_id,
		b.board_title,
		b.board_content,
		b.board_date,
		b.board_modified_date,
		b.board_type,
		b.board_status,
		b.user_no,
		b.board_reply_status,
		u.brand_name
	from board b
	join
		"USER" u 
		 on b.user_no = u.user_no
	where board_type='7' and board_status ='Y'
</select>

<!-- 판매금지 제품 조회 -->
<select id="getproListCount" parameterType="int" resultType="java.lang.Integer">
SELECT COUNT(*)
    FROM BOARD b
    JOIN PRODUCT p ON b.USER_NO = p.USER_NO
    <where>
    	b.BOARD_STATUS = 'Y' AND BOARD_TYPE='8'
        <if test="value != null and value != ''">
            <choose>
                <when test="condition == 'productName'">
                    AND UPPER(p.PRODUCT_NAME) LIKE '%' || UPPER(#{value}) || '%'
                </when>
                <when test="condition == 'productCompany'">
                    AND UPPER(p.PRODUCT_COMPANY) LIKE '%' || UPPER(#{value}) || '%'
                </when>
                <when test="condition == 'boardDate'">
                    AND TO_CHAR(b.BOARD_DATE, 'YYYY-MM-DD') = #{value}
                </when>
                <otherwise>
                    AND (UPPER(p.PRODUCT_NAME) LIKE '%' || UPPER(#{value}) || '%')
                </otherwise>
            </choose>
        </if>
    </where>
</select>

<select id="selecProhibitList" resultType="Board">
SELECT *
    FROM BOARD b
    <where>
    	BOARD_STATUS = 'Y'AND BOARD_TYPE='8'
        <if test="value != null and value != ''">
            <choose>
                <when test="condition == 'boardTitle'">
                    AND UPPER(board_title) LIKE '%' || UPPER(#{value}) || '%'
                </when>
                <when test="condition == 'boardNo'">
                    AND board_id LIKE '%' || #{value} || '%'
                </when>
                <when test="condition == 'boardDate'">
                    AND TO_CHAR(BOARD_DATE, 'YYYYMMDD') = #{value}
                </when>
                <otherwise>
                    AND (UPPER(board_title) LIKE '%' || UPPER(#{value}) || '%')
                </otherwise>
            </choose>
        </if>
    </where>
     ORDER BY BOARD_DATE DESC  <!-- 최신순 -->
</select>

<!-- 판매금지 제품 공지사항 등록 -->
<insert id="proBoardEnroll" parameterType="Board">
	<selectKey  keyProperty="boardId" resultType="int" order="BEFORE">
		select seq_board.nextval from dual
	</selectKey>
	INSERT INTO board (
	    board_id,
	    board_title,
	    board_date,
	    board_modified_date,
	    board_type,
	    board_status,
	    user_no,
	    board_content
	) VALUES (
	    #{boardId},
	    #{boardTitle},
	    SYSDATE,
	    SYSDATE,
	    '8',
	    'Y',
	    #{userNo},
	    #{boardContent}
	)

</insert>

<select id="proBoardDetail" parameterType="int" resultType="Board">
	select * from board where board_id = #{boardId} and board_type='8' and board_status = 'Y'
</select>


<update id="proBoardDelete">
	update board set board_status ='N' where board_id=#{boardId} and board_type='8'
</update>



</mapper>