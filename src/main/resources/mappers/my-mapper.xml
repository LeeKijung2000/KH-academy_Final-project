<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
  PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
  "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="itView.springboot.mapper.MyMapper">

  <!-- 사용자 조회 -->
  <select id="selectUserByNo" parameterType="long" resultType="itView.springboot.vo.User">
    SELECT
      u."USER_NO"        AS userNo,
      u."USER_NAME"      AS userName,
      u."USER_GENDER"    AS userGender,
      u."USER_AGE"       AS userAge,
      u."USER_PHONE"     AS userPhone,
      u."USER_TYPE"      AS userType,
      u."USER_ID"        AS userId,
      u."USER_PASSWORD"  AS userPassword,
      u."USER_STATUS"    AS userStatus,
      u."USER_POINT"     AS userPoint,
      u."USER_ADDRESS"   AS userAddress,
      u."USER_GRADE"     AS userGrade,
      u."EMAIL"          AS email,
      u."BRAND_NAME"     AS brandName,
      u."SKIN_TYPE"      AS skinType,
      u."PERSONAL_COLOR" AS personalColor,
      u."SKIN_TROUBLE"   AS skinTrouble,
      u."HEAD_SKIN"      AS headSkin,
      u."INGREDIENT"     AS ingredient,
      u."ECO_FRIENDLY"   AS ecoFriendly,
      u."HOPE_PRICE"     AS hopePrice
    FROM "USER" u
    WHERE u."USER_NO" = #{userNo}
  </select>

  <!-- 최신 대표 프로필 1장 -->
  <select id="selectProfileImageByUser" parameterType="long" resultType="itView.springboot.vo.Attachment">
    SELECT
      a."ATTM_NO"       AS attmNo,
      a."ATTM_NAME"     AS attmName,
      a."ATTM_RENAME"   AS attmRename,
      a."ATTM_PATH"     AS attmPath,
      a."ATTM_STATUS"   AS attmStatus,
      a."ATTM_DATE"     AS attmDate,
      a."ATTM_LEVEL"    AS attmLevel,
      a."ATTM_POSITION" AS attmPosition,
      a."POSITION_NO"   AS positionNo
    FROM "ATTACHMENT" a
    WHERE a."ATTM_STATUS"='Y'
      AND a."ATTM_POSITION"=7
      AND a."POSITION_NO"=#{userNo}
      AND a."ATTM_LEVEL"=0
    ORDER BY a."ATTM_DATE" DESC
    FETCH FIRST 1 ROW ONLY
  </select>

  <!-- 이전 프로필 비활성화 -->
  <update id="disableOldProfileImages" parameterType="long">
    UPDATE "ATTACHMENT"
       SET "ATTM_STATUS"='N'
     WHERE "ATTM_POSITION"=7
       AND "POSITION_NO"=#{userNo}
  </update>

  <!-- 새 프로필 저장 -->
  <insert id="insertProfileImage" parameterType="itView.springboot.vo.Attachment">
    INSERT INTO "ATTACHMENT"(
      "ATTM_NO","ATTM_NAME","ATTM_RENAME","ATTM_PATH",
      "ATTM_STATUS","ATTM_DATE","ATTM_LEVEL","ATTM_POSITION","POSITION_NO")
    VALUES (
      SEQ_ATTM.NEXTVAL, #{attmName}, #{attmRename}, #{attmPath},
      'Y', SYSDATE, 0, 7, #{positionNo}
    )
  </insert>

  <!-- userId -> userNo -->
  <select id="selectUserNoByUserId" parameterType="string" resultType="long">
    SELECT u."USER_NO"
      FROM "USER" u
     WHERE u."USER_ID" = #{userId}
  </select>

  <!-- 기본/피부 정보 저장 -->
  <update id="updateUserBasicAndSkin" parameterType="itView.springboot.vo.User">
    UPDATE "USER"
    <set>
      "USER_NO" = "USER_NO",
      <if test="userName != null and userName != ''">"USER_NAME" = #{userName},</if>
      <if test="email != null and email != ''">"EMAIL" = #{email},</if>
      <if test="userGender != null and userGender != ''">"USER_GENDER" = #{userGender},</if>
      <if test="userAge != null">"USER_AGE" = #{userAge},</if>
      <if test="skinType != null and skinType != ''">"SKIN_TYPE" = #{skinType},</if>
      <if test="personalColor != null and personalColor != ''">"PERSONAL_COLOR" = #{personalColor},</if>
      <if test="skinTrouble != null and skinTrouble != ''">"SKIN_TROUBLE" = #{skinTrouble},</if>
      <if test="headSkin != null and headSkin != ''">"HEAD_SKIN" = #{headSkin},</if>
      <if test="ingredient   != null and ingredient   != ''">"INGREDIENT"   = #{ingredient},</if>
      <if test="ecoFriendly  != null and ecoFriendly  != ''">"ECO_FRIENDLY" = #{ecoFriendly},</if>
      <if test="hopePrice    != null and hopePrice    != ''">"HOPE_PRICE"   = #{hopePrice},</if>
    </set>
    WHERE "USER_NO" = #{userNo}
  </update>

  <!-- 상품 검색: 대표 썸네일 1장 + 상세HTML 제거 요약 -->
  <select id="searchProducts" parameterType="string" resultType="map"><![CDATA[
    SELECT
      p."PRODUCT_NO"   AS "productNo",
      p."PRODUCT_NAME" AS "productName",
      SUBSTR(REGEXP_REPLACE(NVL(p."PRODUCT_DETAIL", ''), '<[^>]+>', ' '), 1, 200) AS "productDetail",
      CASE
        WHEN a."ATTM_RENAME" IS NOT NULL THEN '/' || a."ATTM_RENAME"
        ELSE '/default-product.png'
      END AS "thumbUrl"
    FROM "PRODUCT" p
    LEFT JOIN (
      SELECT x."POSITION_NO", x."ATTM_RENAME",
             ROW_NUMBER() OVER (PARTITION BY x."POSITION_NO"
                                ORDER BY x."ATTM_DATE" DESC, x."ATTM_NO" DESC) AS rn
        FROM "ATTACHMENT" x
       WHERE x."ATTM_POSITION" = 0
         AND x."ATTM_LEVEL"    = 0
         AND x."ATTM_STATUS"   = 'Y'
    ) a ON a."POSITION_NO" = p."PRODUCT_NO" AND a.rn = 1
    WHERE LOWER(p."PRODUCT_NAME")   LIKE '%' || LOWER(#{keyword}) || '%'
       OR LOWER(p."PRODUCT_DETAIL") LIKE '%' || LOWER(#{keyword}) || '%'
  ]]></select>

  <!-- 리뷰 등록 -->
  <insert id="insertReview" parameterType="itView.springboot.vo.Review">
    INSERT INTO "REVIEW"(
      "REVIEW_NO","REVIEW_CONTENT","REVIEW_RATE","REVIEW_DATE","PRODUCT_NO","USER_NO")
    VALUES(
      SEQ_REVIEW.NEXTVAL, #{reviewContent}, #{reviewRate}, SYSDATE, #{productNo}, #{userNo}
    )
  </insert>

  <!-- 닉네임 중복 -->
  <select id="countByUserName" resultType="int">
    SELECT COUNT(*)
      FROM "USER"
     WHERE "USER_NAME" = #{userName}
    <if test="excludeUserNo != null">
      AND "USER_NO" &lt;&gt; #{excludeUserNo}
    </if>
  </select>

  <!-- 내가 쓴 리뷰 + 상품 썸네일 -->
  <select id="selectMyReviews" parameterType="long" resultType="map">
    SELECT
      r."REVIEW_NO"      AS "reviewNo",
      r."REVIEW_CONTENT" AS "reviewContent",
      r."REVIEW_RATE"    AS "reviewRate",
      r."REVIEW_DATE"    AS "reviewDate",
      r."PRODUCT_NO"     AS "productNo",
      p."PRODUCT_NAME"   AS "productName",
      CASE
        WHEN a."ATTM_RENAME" IS NOT NULL THEN '/' || a."ATTM_RENAME"
        ELSE '/default-product.png'
      END AS "productImageUrl"
    FROM "REVIEW" r
    LEFT JOIN "PRODUCT" p ON p."PRODUCT_NO" = r."PRODUCT_NO"
    LEFT JOIN (
      SELECT x."POSITION_NO", x."ATTM_RENAME",
             ROW_NUMBER() OVER (PARTITION BY x."POSITION_NO"
                                ORDER BY x."ATTM_DATE" DESC, x."ATTM_NO" DESC) AS rn
        FROM "ATTACHMENT" x
       WHERE x."ATTM_POSITION" = 0
         AND x."ATTM_LEVEL"    = 0
         AND x."ATTM_STATUS"   = 'Y'
    ) a ON a."POSITION_NO" = r."PRODUCT_NO" AND a.rn = 1
    WHERE r."USER_NO" = #{userNo}
    ORDER BY r."REVIEW_DATE" DESC
  </select>

  <!-- =========================
       포인트(POINT_BOX)로 전환
       ========================= -->

  <!-- 잔액: 사용(음수) 포함 합계 -->
  <select id="selectPointBalanceBox" parameterType="long" resultType="int">
    SELECT NVL(SUM(b."POINT_VALUE"), 0) AS balance
      FROM "POINT_BOX" b
     WHERE b."USER_NO" = #{userNo}
  </select>

  <!-- 내역: POINT_BOX → PointBox VO로 매핑 -->
  <select id="selectPointHistoryBox" parameterType="long" resultType="itView.springboot.vo.PointBox">
    SELECT
      b."POINT_NO"        AS pointNo,
      b."USER_NO"         AS userNo,
      b."POINT_NAME"      AS pointName,
      b."POINT_DESCRIPTION" AS pointDescription,
      b."POINT_VALUE"     AS pointValue,
      b."POINT_CREATEDATE" AS pointCreatedate,
      b."POINT_ENDDATE"   AS pointEnddate
    FROM "POINT_BOX" b
    WHERE b."USER_NO" = #{userNo}
    ORDER BY b."POINT_CREATEDATE" DESC, b."POINT_NO" DESC
  </select>

  <!-- 지급/차감 1건 기록 (+적립/-차감) -->
  <insert id="insertPointBox" parameterType="itView.springboot.vo.PointBox">
    INSERT INTO "POINT_BOX"(
      "POINT_NO","USER_NO","POINT_NAME","POINT_DESCRIPTION",
      "POINT_VALUE","POINT_CREATEDATE","POINT_ENDDATE"
    ) VALUES (
      SEQ_POINT_BOX.NEXTVAL,
      #{userNo},
      #{pointName},
      #{pointDescription},
      #{pointValue},
      SYSDATE,
      #{pointEnddate, jdbcType=DATE}
    )
  </insert>

  <!-- 보유 쿠폰: COUPON_BOX(수령자) + COUPON(쿠폰 정보) -->
  <select id="selectMyCoupons" parameterType="long" resultType="itView.springboot.vo.Coupon"><![CDATA[
    SELECT
      cb."PERSONAL_COUPON_NO" AS personalCouponNo,
      cb."COUPON_USED"        AS couponUsed,

      c."COUPON_NO"           AS couponNo,
      c."COUPON_NAME"         AS couponName,
      c."COUPON_DESCRIPTION"  AS couponDescription,
      c."COUPON_TARGET"       AS couponTarget,
      c."COUPON_DISCOUNT"     AS couponDiscount,
      c."COUPON_STARTDATE"    AS couponStartdate,
      c."COUPON_ENDDATE"      AS couponEnddate,
      c."COUPON_CREATEDATE"   AS couponCreatedate,
      c."COUPON_MINPRICE"     AS couponMinprice,
      c."COUPON_STATUS"       AS couponStatus
    FROM "COUPON_BOX" cb
    JOIN "COUPON" c
      ON c."COUPON_NO" = cb."COUPON_NO"
    WHERE cb."USER_NO" = #{userNo}
      AND cb."COUPON_USED" = 'N'
      AND c."COUPON_STATUS" = 'Y'
      AND c."COUPON_STARTDATE" <= SYSDATE
      AND (c."COUPON_ENDDATE" IS NULL OR c."COUPON_ENDDATE" >= TRUNC(SYSDATE))
    ORDER BY
      NVL(c."COUPON_ENDDATE", DATE '9999-12-31') ASC,
      c."COUPON_CREATEDATE" DESC,
      c."COUPON_NO" DESC
  ]]></select>

  <!-- 최근 찜 3개 -->
  <select id="selectTop3WishlistMap" parameterType="long" resultType="map">
    SELECT
      w."WISHLIST_NO" AS "wishlistNo",
      w."WISH_DATE"   AS "wishDate",
      w."PRODUCT_NO"  AS "productNo",
      w."USER_NO"     AS "userNo",
      p."PRODUCT_NAME"AS "productName",
      p."PRODUCT_PRICE"AS "productPrice",
      p."PRODUCT_COMPANY" AS "productCompany",
      CASE
        WHEN a."ATTM_RENAME" IS NOT NULL THEN '/' || a."ATTM_RENAME"
        ELSE '/default-product.png'
      END AS "productImageUrl"
    FROM "WISHLIST" w
    JOIN "PRODUCT" p ON p."PRODUCT_NO" = w."PRODUCT_NO"
    LEFT JOIN (
      SELECT x."POSITION_NO", x."ATTM_RENAME",
             ROW_NUMBER() OVER (PARTITION BY x."POSITION_NO"
                                ORDER BY x."ATTM_DATE" DESC, x."ATTM_NO" DESC) AS rn
        FROM "ATTACHMENT" x
       WHERE x."ATTM_POSITION" = 0
         AND x."ATTM_LEVEL"    = 0
         AND x."ATTM_STATUS"   = 'Y'
    ) a ON a."POSITION_NO" = w."PRODUCT_NO" AND a.rn = 1
    WHERE w."USER_NO" = #{userNo}
    ORDER BY w."WISH_DATE" DESC, w."WISHLIST_NO" DESC
    FETCH FIRST 3 ROWS ONLY
  </select>

  <!-- (서연) 주문/썸네일 -->
  <select id="selectproductbyOrder" resultType="Order">
    select 
	        o.order_no as orderNo,
	        o.order_target_no as orderTargetNo,
	        o.order_date as orderDate,
	        o.order_count as orderCount,
	        o.order_status as orderStatus,
	        o.payment_method as paymentMethod,
	        o.pay_price as payPrice,
	        o.delivery_company as deliveryCompany,
	        o.delivery_no as deliveryNo,
	        o.delivery_status as deliveryStatus,
	        o.order_type as orderType,
	        o.user_no as userNo,
	        o.personal_coupon_no as personalCouponNo,
	        o.user_name as userName,
	        o.user_phone as userPhone,
	        o.user_address as userAddress,
	        p.product_no as productNo,
	        p.product_name as productName,
	        p.product_price as productPrice,
	        p.product_stock as productStock,
	        p.product_state as productState,
	        p.product_company as productCompany,
	        a.attm_rename as attmRename
	    from "ORDER" o
	    left join product p 
	        on p.product_no = o.order_target_no
	    left join attachment a
	        on a.position_no = p.product_no
	       and a.attm_level = 0
	    where o.order_no = #{orderNo}
	    order by o.order_no desc
  </select>

  <select id="selectThumbByOrder" resultType="Attachment">
    SELECT *
      FROM attachment
     WHERE attm_position=0
       AND attm_level=0
       AND position_no=#{productNo}
  </select>

  <!-- 모집글 검색 -->
  <select id="searchExperienceGroups"
          parameterType="string"
          resultType="itView.springboot.vo.ExperienceGroup">
    SELECT
      eg."EXP_NO"      AS expNo,
      eg."EXP_TITLE"   AS expTitle,
      eg."EXP_CONTENT" AS expContent,
      eg."EXP_START"   AS expStart,
      eg."EXP_END"     AS expEnd,
      eg."EXP_STATUS"  AS expStatus,
      eg."USER_NO"     AS userNo
    FROM "EXPERIENCE_GROUP" eg
    <where>
      <if test="keyword != null and keyword != ''">
        ( LOWER(eg."EXP_TITLE") LIKE '%' || LOWER(#{keyword}) || '%'
          OR LOWER(eg."EXP_CONTENT") LIKE '%' || LOWER(#{keyword}) || '%')
      </if>
    </where>
    ORDER BY eg."EXP_NO" DESC
    FETCH FIRST 20 ROWS ONLY
  </select>

  <!-- 중복 체크 -->
  <select id="countMyExperienceApply" resultType="int">
    SELECT COUNT(*)
      FROM "EXPERIENCE_APPLICATION"
     WHERE "USER_NO"      = #{userNo}
       AND "EXP_GROUP_NO" = #{expNo}
  </select>

  <!-- 체험단 신청 저장 -->
  <insert id="insertExperienceApply">
    INSERT INTO "EXPERIENCE_APPLICATION"(
      "APPLY_NO",
      "EXP_GROUP_NO",
      "USER_NO",
      "APPLY_CONTENT",
      "USER_NAME",
      "USER_PHONE",
      "USER_ADDRESS",
      "IS_CHOICE"
    ) VALUES (
      SEQ_EXP_APPLI.NEXTVAL,
      #{expNo},
      #{userNo},
      #{applyContent},
      #{receiver},
      #{phone},
      #{address},
      'N'
    )
  </insert>
  
  <!-- MyMapper.xml (체험단 섹션 근처에 추가) -->
	<select id="selectExperienceByNo"
	        parameterType="int"
	        resultType="itView.springboot.vo.ExperienceGroup">
	  SELECT
	    eg."EXP_NO"      AS expNo,
	    eg."EXP_TITLE"   AS expTitle,
	    eg."EXP_CONTENT" AS expContent,
	    eg."EXP_START"   AS expStart,
	    eg."EXP_END"     AS expEnd,
	    eg."EXP_STATUS"  AS expStatus,
	    eg."USER_NO"     AS userNo
	  FROM "EXPERIENCE_GROUP" eg
	  WHERE eg."EXP_NO" = #{expNo}
	</select>
  

  <!-- 내 신청(선정대기/당첨/미선정 모두) + 모집글 + 썸네일 -->
  <select id="selectExperienceWins" parameterType="long" resultType="map"><![CDATA[
    SELECT
      ea."APPLY_NO"        AS "applyNo",
      ea."EXP_GROUP_NO"    AS "expGroupNo",
      ea."USER_NO"         AS "userNo",
      TRIM(ea."IS_CHOICE") AS "winStatusCode",

      ea."APPLY_CONTENT"   AS "applyContent",

      eg."EXP_TITLE"       AS "expTitle",
      eg."EXP_CONTENT"     AS "expContent",
      eg."EXP_START"       AS "expStart",
      eg."EXP_END"         AS "expEnd",
      eg."EXP_TITLE"       AS "productName",

      CASE TRIM(ea."IS_CHOICE")
        WHEN 'Y' THEN '당첨'
        WHEN 'R' THEN '미선정'
        ELSE '선정대기'
      END                  AS "winStatusName",

      CASE
        WHEN a."ATTM_RENAME" IS NOT NULL
          THEN '/uploadFilesFinal/product/' || a."ATTM_RENAME"
        ELSE '/uploadFilesFinal/default-product.png'
      END                  AS "productImageUrl"

    FROM "EXPERIENCE_APPLICATION" ea
    JOIN "EXPERIENCE_GROUP" eg
      ON eg."EXP_NO" = ea."EXP_GROUP_NO"
    LEFT JOIN (
      SELECT x."POSITION_NO", x."ATTM_RENAME",
             ROW_NUMBER() OVER (PARTITION BY x."POSITION_NO"
                                ORDER BY x."ATTM_DATE" DESC, x."ATTM_NO" DESC) rn
        FROM "ATTACHMENT" x
       WHERE x."ATTM_POSITION" = 5
         AND x."ATTM_LEVEL"    = 0
         AND x."ATTM_STATUS"   = 'Y'
    ) a ON a."POSITION_NO" = eg."EXP_NO" AND a.rn = 1
    WHERE ea."USER_NO" = #{userNo}
    ORDER BY ea."APPLY_NO" DESC
  ]]></select>

  <!-- 상품 문의 저장 -->
  <insert id="insertQuestion" parameterType="itView.springboot.vo.Question">
    INSERT INTO "QUESTION"(
      "QUESTION_NO",
      "QUESTION_TITLE",
      "QUESTION_CONTENT",
      "QUESTION_STATUS",
      "USER_NO",
      "PRODUCT_NO"
    ) VALUES (
      SEQ_QUESTION.NEXTVAL,
      #{questionTitle},
      #{questionContent},
      NVL(#{questionStatus}, 'N'),
      #{userNo},
      #{productNo}
    )
  </insert>

  <!-- 주문한 상품 + 속성 (매칭률용) -->
  <select id="selectOrderedProductsWithAttributes" parameterType="long" resultType="map">
    SELECT
      p.PRODUCT_NO      AS productNo,
      p.PRODUCT_NAME    AS productName,
      NVL(p.SKIN_TYPE,'')       AS SKINTYPE,
      NVL(p.PERSONAL_COLOR,'')  AS PERSONALCOLOR,
      NVL(p.SKIN_TROUBLE,'')    AS SKINTROUBLE,
      NVL(p.USER_AGE,'')        AS TARGETAGE,
      NVL(p.GENDER,'')          AS TARGETGENDER,
      MAX(o.ORDER_DATE)         AS LastOrderDate
    FROM PRODUCT p
    JOIN "ORDER" o ON o.ORDER_TARGET_NO = p.PRODUCT_NO
    WHERE o.USER_NO = #{userNo}
    GROUP BY p.PRODUCT_NO, p.PRODUCT_NAME, p.SKIN_TYPE, p.PERSONAL_COLOR, 
             p.SKIN_TROUBLE, p.USER_AGE, p.GENDER
    ORDER BY MAX(o.ORDER_DATE) DESC
  </select>
  
	 
	  

</mapper>
