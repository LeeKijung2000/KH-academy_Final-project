<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper
        PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "https://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="itView.springboot.mapper.InhoMapper">

	<insert id="insertUser" >
		<selectKey keyProperty="userNo" resultType="int" order="BEFORE">
			select seq_user.nextval from dual
		</selectKey>
		INSERT INTO "USER" (
			USER_NO,
	      	USER_NAME,
	      	USER_GENDER,
	      	USER_AGE,
	      	USER_PHONE,
	      	USER_TYPE,
	      	USER_ID,
	      	USER_PASSWORD,
	      	USER_STATUS,
	      	USER_POINT,
	      	USER_ADDRESS,
	      	USER_GRADE,
	      	EMAIL,
	      	BRAND_NAME,
	      	SKIN_TYPE,
	      	PERSONAL_COLOR,
	      	SKIN_TROUBLE,
	      	HEAD_SKIN,
	      	KAKAO_ID
		) VALUES (
	      	#{userNo},
	      	#{userName},
	      	#{userGender},
	      	#{userAge},
	      	#{userPhone},
	      	#{userType},
	      	#{userId},
	      	#{userPassword},
	      	'Y',
	      	#{userPoint},
	      	#{userAddress},
	      	'D',
	      	#{email},
	      	#{brandName},
	      	#{skinType},
	      	#{personalColor},
	      	#{skinTrouble},
	      	#{headSkin},
	      	#{kakaoId}
		)
	</insert>
	
	<select id="login">
		select * from "USER"
		where user_id = #{userId} and user_status = 'Y'
	</select>
	
	<select id="checkId">
		select count(*)
		from "USER"
		where user_id = #{userId}
	</select>
	
	<insert id="enrollNotice">
		<selectKey keyProperty="boardId" resultType="int" order="BEFORE">
			select seq_board.nextval from dual
		</selectKey>
		insert into board
		values(#{boardId}, #{boardTitle}, sysdate, #{boardModifiedDate}, 
				#{boardType}, 'Y', #{userNo}, #{boardContent}, #{boardReplyStatus})
	</insert>
	
	<!-- 첨부파일 등록 -->
    <insert id="insertAttachment">
        INSERT INTO ATTACHMENT (
        ATTM_NO,
        ATTM_NAME,
        ATTM_RENAME,
        ATTM_PATH,
        ATTM_STATUS,
        ATTM_DATE,
        ATTM_LEVEL,
        ATTM_POSITION,
        POSITION_NO
        ) VALUES (
        SEQ_ATTM.NEXTVAL,
        #{attmName},
        #{attmRename},
        #{attmPath},
        'Y',
        SYSDATE,
        1,
        1,
        #{positionNo}
        )
    </insert>
	
	<insert id="enrollCoupon">
		<selectKey keyProperty="couponNo" resultType="int" order="BEFORE">
			select seq_coupon.nextval from dual
		</selectKey>
		insert into Coupon
		values(#{couponNo}, #{couponName}, #{couponDescription}, #{couponTarget}, #{couponDiscount},
				#{couponStartdate}, #{couponEnddate}, sysdate, #{couponMinprice}, #{userNo}, default)
	</insert>
	
	<select id="selectTargetUser">
		select *
		from "USER"
		where user_grade = #{couponTarget} and user_type = 'U'
	</select>

	<insert id="insertCouponBox">
		insert into coupon_box
		values (seq_coupon_box.nextval, 'N', #{userNo}, #{couponNo})
	</insert>
	
	<select id="getCouponCount">
		select count(*)
		from coupon
			join "USER" using(user_no)
		<if test="value != null">
			<choose>
				<when test="condition == 'title'">
					where coupon_name like '%${value}%'
				</when>
				<when test="condition == 'name'">
					where user_name like '%${value}%'
				</when>
			</choose>
		</if>
	</select>
	
	<select id="selectCouponList">
		select *
		from coupon
			join "USER" using(user_no)
		<if test="value != null">
			<choose>
				<when test="condition == 'title'">
					where coupon_name like '%${value}%'
				</when>
				<when test="condition == 'name'">
					where user_name like '%${value}%'
				</when>
			</choose>
		</if>
		order by coupon_no desc
	</select>
	
	<select id="getCouponBoardCount">
		select count(*)
		from board
			join "USER" using(user_no)
		where board_type = 4
		<if test="value != null">
			<choose>
				<when test="condition == 'title'">
					and board_title like '%${value}%'
				</when>
				<when test="condition == 'name'">
					and user_name like '%${value}%'
				</when>
			</choose>
		</if>
	</select>
	
	<select id="selectCouponBoardList">
		select *
		from board
			join "USER" using(user_no)
		where board_type = 4
		<if test="value != null">
			<choose>
				<when test="condition == 'title'">
					and board_title like '%${value}%'
				</when>
				<when test="condition == 'name'">
					and user_name like '%${value}%'
				</when>
			</choose>
		</if>
		order by board_id desc
	</select>
	
	<select id="selectCoupon">
		select *
		from coupon
		where coupon_no = #{couponNo}
	</select>
	
	<select id="selectCouponBoard">
		select *
		from board
		where board_id = #{boardId}
	</select>
	
	<update id="updateCoupon">
		update coupon
		set coupon_name = #{couponName}, coupon_description = #{couponDescription}, coupon_target = #{couponTarget},
			coupon_discount = #{couponDiscount}, coupon_startdate = #{couponStartdate}, coupon_enddate = #{couponEnddate},
			coupon_minprice = #{couponMinprice}
		where coupon_no = #{couponNo}
	</update>

	<update id="updateCouponBoard">
		update board
		set board_title = #{boardTitle}, board_content = #{boardContent}, board_type = 4, board_modified_date = sysdate
		where board_id = #{boardId}
	</update>
	
	<insert id="enrollPoint">
		insert into point
		values(seq_point.nextval, #{pointName}, #{pointDescription}, #{pointValue}, sysdate, #{pointEnddate}, #{userNo})
	</insert>
	
	<update id="updatePoint">
		update point
		set point_name = #{pointName}, point_description = #{pointDescription}, point_value = #{pointValue},
			point_enddate = #{pointEnddate}
		where point_no = #{pointNo}
	</update>
	
	<select id="getPointCount">
		select count(*)
		from point
			join "USER" using(user_no)
		<if test="value != null">
			<choose>
				<when test="condition == 'name'">
					where point_name like '%${value}%'
				</when>
				<when test="condition == 'name'">
					where user_name like '%${value}%'
				</when>
			</choose>
		</if>
	</select>
	
	<select id="selectPointList">
		select *
		from point
			join "USER" using(user_no)
		<if test="value != null">
			<choose>
				<when test="condition == 'title'">
					where point_name like '%${value}%'
				</when>
				<when test="condition == 'name'">
					where user_name like '%${value}%'
				</when>
			</choose>
		</if>
		order by point_no desc
	</select>
	
	<select id="getPointByName">
        select point_value
        from point
        where point_name = #{pointName}
    </select>
    
    <update id="addPoint">
        update "USER"
        set user_point = user_point + #{point}
        where user_no = #{userNo}
    </update>

	<select id="getRankingCount">
		select count(*)
		from product
		<if test="value != null">
			<choose>
				<!-- name, description은 일부만 검색해도 결과가 나오도록 -->
				<when test="condition == 'name' or condition == 'detail'">
					where product_${condition} like '%${value}%'
				</when>
				
			</choose>
		</if>
	</select>
	
	<select id="selectRankingList">
		select *
		from product
		<if test="value != null">
			<choose>
				<when test="condition == 'name'">
					where product_name like '%${value}%'
				</when>
				<when test="condition == 'description'">
					where product_description like '%${value}%'
				</when>
			</choose>
		</if>
		order by product_no desc
	</select>
	
	<select id="selectPoint">
		select *
		from point
		where point_no = #{pointNo}
	</select>
	
	<delete id="deleteNotice">
		delete from board
		where board_id = #{boardId}
	</delete>
	
	<delete id="deleteCoupon">
		delete from coupon
		where coupon_no = #{couponNo}
	</delete>
	
	<delete id="deletePoint">
		delete from point
		where point_no = #{pointNo}
	</delete>
	
	<select id="getNoticeCount">
		select count(*)
		from board
			join "USER" using(user_no)
		where board_type in (1,2,4,5,8)
		<if test="value != null">
			<choose>
				<when test="condition == 'title'">
					and board_title like '%${value}%'
				</when>
				<when test="condition == 'name'">
					and user_name like '%${value}%'
				</when>
			</choose>
		</if>
	</select>
	
	<select id="selectNoticeList">
		select *
		from board
			join "USER" using(user_no)
		where board_type in (1,2,4,5,8)
		<if test="value != null">
			<choose>
				<when test="condition == 'title'">
					and board_title like '%${value}%'
				</when>
				<when test="condition == 'name'">
					and user_name like '%${value}%'
				</when>
			</choose>
		</if>
		order by board_id desc
	</select>
	
	<update id="updateNotice">
		update board
		set board_title = #{boardTitle}, board_content = #{boardContent}, board_type = #{boardType}, board_modified_date = sysdate
		where board_id = #{boardId}
	</update>
	
	<select id="selectNotice">
		select *
		from board
		where board_id = #{boardId}
	</select>
	
	<select id="selectThumbnail">
		select attm_rename
		from attachment
		where attm_position = 0 and position_no = #{productNo} 
				and attm_level = 0 and attm_status = 'Y'
	</select>
	
	<select id="selectProduct">
		select *
		from product
		where product_no = #{productNo}
	</select>
	
	<select id="getReportProductCount" resultType="int">
	    SELECT COUNT(*)
		FROM (
		    SELECT report_target_no, product_name, product_no
		    FROM report
		    	JOIN product ON report_target_no = product_no
		    WHERE report_type = 'P'
		    GROUP BY report_target_no, product_name, product_no
		) t
		<if test="value != null">
			<choose>
				<when test="condition == 'name'">
					where product_name like '%${value}%'
				</when>
				<when test="condition == 'no'">
					where product_no like '%${value}%'
				</when>
			</choose>
		</if>
	</select>

	
	<select id="selectReportProductList">
		SELECT 
		    ROW_NUMBER() OVER (ORDER BY COUNT(report_no) DESC) AS row_num,
		    report_type,
		    product_no,
		    product_name,
		    COUNT(CASE WHEN report_status = 'Y' THEN 1 END) AS report_count
		FROM product
		JOIN report
		  ON report_target_no = product_no
		WHERE report_type = 'P'
		<if test="value != null">
			<choose>
				<when test="condition == 'name'">
					and product_name like '%${value}%'
				</when>
				<when test="condition == 'no'">
					and product_no like '%${value}%'
				</when>
			</choose>
		</if>
		GROUP BY product_no, product_name, report_type
		ORDER BY report_count DESC
	</select>
	
	<select id="selectReportProduct">
		select *
		from product
		where product_no = #{productNo}
	</select>

	<select id="getReportCount">
		select count(*)
		from report
		where report_type = 'P' and report_target_no = #{productNo}
	</select>
	
	<select id="selectReportList">
		select *
		from report
			join "USER" on(user_no = reporter_user_id)
		where report_target_no = #{productNo}
		order by report_date desc
 	</select>
 	
 	<update id="updateReportModifyDate">
 		update report
 		set report_modify_date = #{modifyDate}
 		where report_target_no = #{productNo}
 	</update>
 	
 	<update id="updateProductState">
 		update product
 		set product_state = 'N'
 		where product_no = #{productNo}
 	</update>
 	
 	<update id="activateProducts">
 		<![CDATA[
 		update product
 		set product_state ='Y'
 		where product_state = 'N'
 			and exists (
 				select 1 from report
 				where report_target_no = product_no
 					and report_modify_date <= #{today}
 			)
 		]]>
 			
 	</update>
 	
 	<insert id="enrollReport">
 		<selectKey keyProperty="reportNo" resultType="int" order="BEFORE">
			select seq_report.nextval from dual
		</selectKey>
		insert into report
		values(#{reportNo}, #{reportTitle}, #{reportContent}, default, default,
				default, #{reportType}, #{reporterUserId}, #{reportTargetNo})
 	</insert>
	
</mapper>