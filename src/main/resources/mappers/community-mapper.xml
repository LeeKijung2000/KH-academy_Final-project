<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper
        PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "https://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="itView.springboot.mapper.CommunityMapper">

    <!-- 검색 포함 게시글 수 -->
    <select id="getListCountWithSearch" resultType="int">
        SELECT COUNT(*) FROM BOARD
        WHERE BOARD_STATUS='Y'
        AND BOARD_TYPE IN (5)
        <if test="keyword != null and keyword != ''">
            <choose>
                <when test="type == 'title'">
                    AND BOARD_TITLE LIKE '%' || #{keyword} || '%'
                </when>
                <when test="type == 'content'">
                    AND BOARD_CONTENT LIKE '%' || #{keyword} || '%'
                </when>
                <otherwise>
                    AND (BOARD_TITLE LIKE '%' || #{keyword} || '%' OR BOARD_CONTENT LIKE '%' || #{keyword} || '%')
                </otherwise>
            </choose>
        </if>
    </select>

    <!-- 검색 포함 게시글 목록 -->
    <select id="selectBoardListWithSearch" resultType="itView.springboot.vo.Board">
        SELECT B.*,
        U.USER_NAME,
        U.BRAND_NAME
        FROM BOARD B
        JOIN "USER" U ON B.USER_NO = U.USER_NO
        WHERE B.BOARD_STATUS='Y'
        AND B.BOARD_TYPE IN (5)
        <if test="keyword != null and keyword != ''">
            <choose>
                <when test="type == 'title'">
                    AND B.BOARD_TITLE LIKE '%' || #{keyword} || '%'
                </when>
                <when test="type == 'content'">
                    AND B.BOARD_CONTENT LIKE '%' || #{keyword} || '%'
                </when>
                <otherwise>
                    AND (B.BOARD_TITLE LIKE '%' || #{keyword} || '%'
                    OR B.BOARD_CONTENT LIKE '%' || #{keyword} || '%')
                </otherwise>
            </choose>
        </if>
        ORDER BY B.BOARD_ID DESC
    </select>



    <!-- 게시글 갯수 가져오기-->
    <select id="getListCount" resultType="_int">
        select count(*)
        from board
        where board_status='Y'
        AND BOARD_TYPE IN (5)
    </select>


    <!-- 일반 게시글 목록 -->
    <select id="selectBoardList" resultType="itView.springboot.vo.Board">
        SELECT B.*,
        U.USER_NAME,
        U.BRAND_NAME
        FROM BOARD B
        JOIN "USER" U ON B.USER_NO = U.USER_NO
        WHERE B.BOARD_STATUS='Y'
        AND B.BOARD_TYPE IN (5)
        ORDER BY B.BOARD_ID DESC
    </select>
    <!-- 게시글 상세 목록   -->
    <select id="selectBoard" parameterType="int" resultType="itView.springboot.vo.Board">
        SELECT B.*,
        U.USER_NAME,
        U.BRAND_NAME
        FROM BOARD B
        JOIN "USER" U ON B.USER_NO = U.USER_NO
        WHERE B.BOARD_ID = #{boardId}
        AND B.BOARD_STATUS = 'Y'
    </select>


    <!-- 게시글 등록 -->
    <insert id="insertBoard" parameterType="itView.springboot.vo.Board" keyProperty="boardId">
        <selectKey keyProperty="boardId" resultType="int" order="BEFORE">
            SELECT SEQ_BOARD.NEXTVAL FROM DUAL
        </selectKey>
        INSERT INTO BOARD (
        BOARD_ID,
        BOARD_TITLE,
        BOARD_CONTENT,
        BOARD_DATE,
        BOARD_TYPE,
        BOARD_STATUS,
        USER_NO
        ) VALUES (
        #{boardId},
        #{boardTitle},
        #{boardContent},
        SYSDATE,
        5,
        'Y',
        #{userNo}
        )
    </insert>
    <!-- 첨부파일 등록 -->
    <insert id="insertAttachment" parameterType="itView.springboot.vo.Attachment">
        INSERT INTO ATTACHMENT (
        ATTM_NO,
        ATTM_NAME,
        ATTM_RENAME,
        ATTM_PATH,
        ATTM_STATUS,
        ATTM_DATE,
        ATTM_LEVEL,
        ATTM_POSITION,
        POSITION_NO
        ) VALUES (
        SEQ_ATTM.NEXTVAL,
        #{attmName},
        #{attmRename},
        #{attmPath},
        'Y',
        SYSDATE,
        1,
        1,
        #{positionNo}
        )
    </insert>

    <!--  게시글 수정  -->
    <update id="updateBoard" parameterType="itView.springboot.vo.Board">
        UPDATE BOARD SET
        BOARD_TITLE = #{boardTitle},
        BOARD_CONTENT = #{boardContent},
        BOARD_MODIFIED_DATE = SYSDATE
        WHERE BOARD_ID = #{boardId}
    </update>

    <!--  게시글 삭제 (상태값 변경)  -->
    <update id="deleteBoard" parameterType="int">
        UPDATE BOARD SET BOARD_STATUS = 'N' WHERE BOARD_ID = #{boardId}
    </update>

    <select id="selectFirstImage" resultType="itView.springboot.vo.Attachment">
        SELECT *
        FROM attachment
        WHERE position_no = #{boardId}
        AND attm_position = #{boardType}
        AND attm_status = 'Y'
        ORDER BY attm_no ASC
        FETCH FIRST 1 ROWS ONLY
    </select>







    <!--  첨부파일 조회  -->
    <select id="selectAttachments" parameterType="int" resultType="itView.springboot.vo.Attachment">SELECT ATTM_NO,
        ATTM_NAME, ATTM_RENAME, ATTM_PATH, ATTM_STATUS, ATTM_DATE, ATTM_LEVEL, ATTM_POSITION, POSITION_NO FROM
        ATTACHMENT WHERE POSITION_NO = #{boardId} AND ATTM_STATUS = 'Y'
    </select>

    <!--  첨부파일 삭제 (상태값 변경)  -->
    <update id="deleteAttachment" parameterType="int">UPDATE ATTACHMENT SET ATTM_STATUS = 'N' WHERE POSITION_NO =
        #{boardId}
    </update>









    <!-- 댓글 목록 -->
    <select id="selectReplyList" parameterType="int" resultType="itView.springboot.vo.Reply">
        SELECT R.REPLY_NO,
        R.REPLY_CONTENT,
        R.REPLY_DATE,
        R.REPLY_MODIFIED_DATE,
        R.PARENT_ID,
        R.REPLY_STATUS,
        R.BOARD_ID,
        R.USER_NO,
        U.USER_NAME
        FROM REPLY R
        JOIN "USER" U ON R.USER_NO = U.USER_NO
        WHERE R.BOARD_ID = #{boardId}
        AND R.REPLY_STATUS = 'Y'
        ORDER BY R.PARENT_ID ASC, R.REPLY_NO ASC
    </select>

    <!-- 댓글 등록 -->
    <insert id="insertReply" parameterType="itView.springboot.vo.Reply" keyProperty="replyNo">
        <selectKey keyProperty="replyNo" resultType="int" order="BEFORE">
            SELECT SEQ_REPLY.NEXTVAL FROM DUAL
        </selectKey>
        INSERT INTO REPLY (
        REPLY_NO,
        REPLY_CONTENT,
        REPLY_DATE,
        PARENT_ID,
        REPLY_STATUS,
        BOARD_ID,
        USER_NO
        ) VALUES (
        #{replyNo},
        #{replyContent},
        SYSDATE,
        #{parentId}, <!-- null 또는 부모 댓글 번호 그대로 들어감 -->
        'Y',
        #{boardId},
        #{userNo}
        )
    </insert>



    <!-- 댓글 수정 -->
    <update id="updateReply" parameterType="itView.springboot.vo.Reply">
        UPDATE REPLY
        SET REPLY_CONTENT = #{replyContent},
        REPLY_MODIFIED_DATE = SYSDATE
        WHERE REPLY_NO = #{replyNo}
    </update>

    <!-- 댓글 삭제 (상태값 변경) -->
    <update id="deleteReply" parameterType="int">
        UPDATE REPLY
        SET REPLY_STATUS = 'N'
        WHERE REPLY_NO = #{replyNo}
    </update>


    <!-- 단일 댓글 조회 -->
    <select id="findReplyById" parameterType="int" resultType="itView.springboot.vo.Reply">
        SELECT R.REPLY_NO,
        R.REPLY_CONTENT,
        R.REPLY_DATE,
        R.REPLY_MODIFIED_DATE,
        R.PARENT_ID,
        R.REPLY_STATUS,
        R.BOARD_ID,
        R.USER_NO,
        U.USER_NAME
        FROM REPLY R
        JOIN "USER" U ON R.USER_NO = U.USER_NO
        WHERE R.REPLY_NO = #{replyNo}
        AND R.REPLY_STATUS = 'Y'
    </select>









</mapper>